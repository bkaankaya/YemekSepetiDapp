// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class EthPriceUpdated extends ethereum.Event {
  get params(): EthPriceUpdated__Params {
    return new EthPriceUpdated__Params(this);
  }
}

export class EthPriceUpdated__Params {
  _event: EthPriceUpdated;

  constructor(event: EthPriceUpdated) {
    this._event = event;
  }

  get priceE18(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get updater(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class FeederGranted extends ethereum.Event {
  get params(): FeederGranted__Params {
    return new FeederGranted__Params(this);
  }
}

export class FeederGranted__Params {
  _event: FeederGranted;

  constructor(event: FeederGranted) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class FeederRevoked extends ethereum.Event {
  get params(): FeederRevoked__Params {
    return new FeederRevoked__Params(this);
  }
}

export class FeederRevoked__Params {
  _event: FeederRevoked;

  constructor(event: FeederRevoked) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class TokenDecimalsSet extends ethereum.Event {
  get params(): TokenDecimalsSet__Params {
    return new TokenDecimalsSet__Params(this);
  }
}

export class TokenDecimalsSet__Params {
  _event: TokenDecimalsSet;

  constructor(event: TokenDecimalsSet) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get decimals(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get setter(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class TokenPriceUpdated extends ethereum.Event {
  get params(): TokenPriceUpdated__Params {
    return new TokenPriceUpdated__Params(this);
  }
}

export class TokenPriceUpdated__Params {
  _event: TokenPriceUpdated;

  constructor(event: TokenPriceUpdated) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get priceE18(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get updater(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class Oracle extends ethereum.SmartContract {
  static bind(address: Address): Oracle {
    return new Oracle("Oracle", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  FEEDER_ROLE(): Bytes {
    let result = super.call("FEEDER_ROLE", "FEEDER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_FEEDER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("FEEDER_ROLE", "FEEDER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  _ethPriceE18(): BigInt {
    let result = super.call("_ethPriceE18", "_ethPriceE18():(uint256)", []);

    return result[0].toBigInt();
  }

  try__ethPriceE18(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("_ethPriceE18", "_ethPriceE18():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  _tokenPriceE18(param0: Address): BigInt {
    let result = super.call(
      "_tokenPriceE18",
      "_tokenPriceE18(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBigInt();
  }

  try__tokenPriceE18(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "_tokenPriceE18",
      "_tokenPriceE18(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  convertTokenToUsd(tokenAmount: BigInt, token: Address): BigInt {
    let result = super.call(
      "convertTokenToUsd",
      "convertTokenToUsd(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(tokenAmount),
        ethereum.Value.fromAddress(token),
      ],
    );

    return result[0].toBigInt();
  }

  try_convertTokenToUsd(
    tokenAmount: BigInt,
    token: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "convertTokenToUsd",
      "convertTokenToUsd(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(tokenAmount),
        ethereum.Value.fromAddress(token),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  convertUsdToToken(usdAmountE18: BigInt, token: Address): BigInt {
    let result = super.call(
      "convertUsdToToken",
      "convertUsdToToken(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(usdAmountE18),
        ethereum.Value.fromAddress(token),
      ],
    );

    return result[0].toBigInt();
  }

  try_convertUsdToToken(
    usdAmountE18: BigInt,
    token: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "convertUsdToToken",
      "convertUsdToToken(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(usdAmountE18),
        ethereum.Value.fromAddress(token),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  currentEthPriceE18(): BigInt {
    let result = super.call(
      "currentEthPriceE18",
      "currentEthPriceE18():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_currentEthPriceE18(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "currentEthPriceE18",
      "currentEthPriceE18():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  currentTokenPriceE18(token: Address): BigInt {
    let result = super.call(
      "currentTokenPriceE18",
      "currentTokenPriceE18(address):(uint256)",
      [ethereum.Value.fromAddress(token)],
    );

    return result[0].toBigInt();
  }

  try_currentTokenPriceE18(token: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "currentTokenPriceE18",
      "currentTokenPriceE18(address):(uint256)",
      [ethereum.Value.fromAddress(token)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  ethLastUpdatedAt(): BigInt {
    let result = super.call(
      "ethLastUpdatedAt",
      "ethLastUpdatedAt():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_ethLastUpdatedAt(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "ethLastUpdatedAt",
      "ethLastUpdatedAt():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role),
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getTokenPrice(token: Address): BigInt {
    let result = super.call(
      "getTokenPrice",
      "getTokenPrice(address):(uint256)",
      [ethereum.Value.fromAddress(token)],
    );

    return result[0].toBigInt();
  }

  try_getTokenPrice(token: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTokenPrice",
      "getTokenPrice(address):(uint256)",
      [ethereum.Value.fromAddress(token)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account),
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  quoteEth(amountWei: BigInt): BigInt {
    let result = super.call("quoteEth", "quoteEth(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(amountWei),
    ]);

    return result[0].toBigInt();
  }

  try_quoteEth(amountWei: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("quoteEth", "quoteEth(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(amountWei),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  quoteSymbol(): string {
    let result = super.call("quoteSymbol", "quoteSymbol():(string)", []);

    return result[0].toString();
  }

  try_quoteSymbol(): ethereum.CallResult<string> {
    let result = super.tryCall("quoteSymbol", "quoteSymbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  quoteToken(token: Address, amount: BigInt): BigInt {
    let result = super.call(
      "quoteToken",
      "quoteToken(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(token),
        ethereum.Value.fromUnsignedBigInt(amount),
      ],
    );

    return result[0].toBigInt();
  }

  try_quoteToken(token: Address, amount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "quoteToken",
      "quoteToken(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(token),
        ethereum.Value.fromUnsignedBigInt(amount),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  tokenDecimals(param0: Address): i32 {
    let result = super.call("tokenDecimals", "tokenDecimals(address):(uint8)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return result[0].toI32();
  }

  try_tokenDecimals(param0: Address): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "tokenDecimals",
      "tokenDecimals(address):(uint8)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  tokenLastUpdatedAt(param0: Address): BigInt {
    let result = super.call(
      "tokenLastUpdatedAt",
      "tokenLastUpdatedAt(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBigInt();
  }

  try_tokenLastUpdatedAt(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenLastUpdatedAt",
      "tokenLastUpdatedAt(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenPrices(param0: Address): BigInt {
    let result = super.call("tokenPrices", "tokenPrices(address):(uint256)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return result[0].toBigInt();
  }

  try_tokenPrices(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenPrices",
      "tokenPrices(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class GrantFeederCall extends ethereum.Call {
  get inputs(): GrantFeederCall__Inputs {
    return new GrantFeederCall__Inputs(this);
  }

  get outputs(): GrantFeederCall__Outputs {
    return new GrantFeederCall__Outputs(this);
  }
}

export class GrantFeederCall__Inputs {
  _call: GrantFeederCall;

  constructor(call: GrantFeederCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class GrantFeederCall__Outputs {
  _call: GrantFeederCall;

  constructor(call: GrantFeederCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get callerConfirmation(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeFeederCall extends ethereum.Call {
  get inputs(): RevokeFeederCall__Inputs {
    return new RevokeFeederCall__Inputs(this);
  }

  get outputs(): RevokeFeederCall__Outputs {
    return new RevokeFeederCall__Outputs(this);
  }
}

export class RevokeFeederCall__Inputs {
  _call: RevokeFeederCall;

  constructor(call: RevokeFeederCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RevokeFeederCall__Outputs {
  _call: RevokeFeederCall;

  constructor(call: RevokeFeederCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetEthPriceCall extends ethereum.Call {
  get inputs(): SetEthPriceCall__Inputs {
    return new SetEthPriceCall__Inputs(this);
  }

  get outputs(): SetEthPriceCall__Outputs {
    return new SetEthPriceCall__Outputs(this);
  }
}

export class SetEthPriceCall__Inputs {
  _call: SetEthPriceCall;

  constructor(call: SetEthPriceCall) {
    this._call = call;
  }

  get priceE18(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetEthPriceCall__Outputs {
  _call: SetEthPriceCall;

  constructor(call: SetEthPriceCall) {
    this._call = call;
  }
}

export class SetTokenDecimalsCall extends ethereum.Call {
  get inputs(): SetTokenDecimalsCall__Inputs {
    return new SetTokenDecimalsCall__Inputs(this);
  }

  get outputs(): SetTokenDecimalsCall__Outputs {
    return new SetTokenDecimalsCall__Outputs(this);
  }
}

export class SetTokenDecimalsCall__Inputs {
  _call: SetTokenDecimalsCall;

  constructor(call: SetTokenDecimalsCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get decimals_(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class SetTokenDecimalsCall__Outputs {
  _call: SetTokenDecimalsCall;

  constructor(call: SetTokenDecimalsCall) {
    this._call = call;
  }
}

export class SetTokenPriceCall extends ethereum.Call {
  get inputs(): SetTokenPriceCall__Inputs {
    return new SetTokenPriceCall__Inputs(this);
  }

  get outputs(): SetTokenPriceCall__Outputs {
    return new SetTokenPriceCall__Outputs(this);
  }
}

export class SetTokenPriceCall__Inputs {
  _call: SetTokenPriceCall;

  constructor(call: SetTokenPriceCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get priceE18(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetTokenPriceCall__Outputs {
  _call: SetTokenPriceCall;

  constructor(call: SetTokenPriceCall) {
    this._call = call;
  }
}
