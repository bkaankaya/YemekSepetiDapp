// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class Deposited extends ethereum.Event {
  get params(): Deposited__Params {
    return new Deposited__Params(this);
  }
}

export class Deposited__Params {
  _event: Deposited;

  constructor(event: Deposited) {
    this._event = event;
  }

  get orderId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get payer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get payee(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class DepositedToken extends ethereum.Event {
  get params(): DepositedToken__Params {
    return new DepositedToken__Params(this);
  }
}

export class DepositedToken__Params {
  _event: DepositedToken;

  constructor(event: DepositedToken) {
    this._event = event;
  }

  get orderId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get payer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get payee(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class Refunded extends ethereum.Event {
  get params(): Refunded__Params {
    return new Refunded__Params(this);
  }
}

export class Refunded__Params {
  _event: Refunded;

  constructor(event: Refunded) {
    this._event = event;
  }

  get orderId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Released extends ethereum.Event {
  get params(): Released__Params {
    return new Released__Params(this);
  }
}

export class Released__Params {
  _event: Released;

  constructor(event: Released) {
    this._event = event;
  }

  get orderId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Escrow__holdsResult {
  value0: BigInt;
  value1: Address;
  value2: Address;
  value3: Address;
  value4: boolean;

  constructor(
    value0: BigInt,
    value1: Address,
    value2: Address,
    value3: Address,
    value4: boolean,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    return map;
  }

  getAmount(): BigInt {
    return this.value0;
  }

  getPayer(): Address {
    return this.value1;
  }

  getToken(): Address {
    return this.value2;
  }

  getPayee(): Address {
    return this.value3;
  }

  getReleasedOrRefunded(): boolean {
    return this.value4;
  }
}

export class Escrow extends ethereum.SmartContract {
  static bind(address: Address): Escrow {
    return new Escrow("Escrow", address);
  }

  allowedCaller(): Address {
    let result = super.call("allowedCaller", "allowedCaller():(address)", []);

    return result[0].toAddress();
  }

  try_allowedCaller(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "allowedCaller",
      "allowedCaller():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getHoldAmount(orderId: BigInt): BigInt {
    let result = super.call(
      "getHoldAmount",
      "getHoldAmount(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(orderId)],
    );

    return result[0].toBigInt();
  }

  try_getHoldAmount(orderId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getHoldAmount",
      "getHoldAmount(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(orderId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  holds(param0: BigInt): Escrow__holdsResult {
    let result = super.call(
      "holds",
      "holds(uint256):(uint256,address,address,address,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return new Escrow__holdsResult(
      result[0].toBigInt(),
      result[1].toAddress(),
      result[2].toAddress(),
      result[3].toAddress(),
      result[4].toBoolean(),
    );
  }

  try_holds(param0: BigInt): ethereum.CallResult<Escrow__holdsResult> {
    let result = super.tryCall(
      "holds",
      "holds(uint256):(uint256,address,address,address,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Escrow__holdsResult(
        value[0].toBigInt(),
        value[1].toAddress(),
        value[2].toAddress(),
        value[3].toAddress(),
        value[4].toBoolean(),
      ),
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _allowedCaller(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get orderId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get payer(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get payee(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class DepositTokenCall extends ethereum.Call {
  get inputs(): DepositTokenCall__Inputs {
    return new DepositTokenCall__Inputs(this);
  }

  get outputs(): DepositTokenCall__Outputs {
    return new DepositTokenCall__Outputs(this);
  }
}

export class DepositTokenCall__Inputs {
  _call: DepositTokenCall;

  constructor(call: DepositTokenCall) {
    this._call = call;
  }

  get orderId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get payer(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get payee(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get token(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class DepositTokenCall__Outputs {
  _call: DepositTokenCall;

  constructor(call: DepositTokenCall) {
    this._call = call;
  }
}

export class RefundCall extends ethereum.Call {
  get inputs(): RefundCall__Inputs {
    return new RefundCall__Inputs(this);
  }

  get outputs(): RefundCall__Outputs {
    return new RefundCall__Outputs(this);
  }
}

export class RefundCall__Inputs {
  _call: RefundCall;

  constructor(call: RefundCall) {
    this._call = call;
  }

  get orderId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RefundCall__Outputs {
  _call: RefundCall;

  constructor(call: RefundCall) {
    this._call = call;
  }
}

export class ReleaseCall extends ethereum.Call {
  get inputs(): ReleaseCall__Inputs {
    return new ReleaseCall__Inputs(this);
  }

  get outputs(): ReleaseCall__Outputs {
    return new ReleaseCall__Outputs(this);
  }
}

export class ReleaseCall__Inputs {
  _call: ReleaseCall;

  constructor(call: ReleaseCall) {
    this._call = call;
  }

  get orderId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ReleaseCall__Outputs {
  _call: ReleaseCall;

  constructor(call: ReleaseCall) {
    this._call = call;
  }
}

export class ReleaseTokenAsUsdCall extends ethereum.Call {
  get inputs(): ReleaseTokenAsUsdCall__Inputs {
    return new ReleaseTokenAsUsdCall__Inputs(this);
  }

  get outputs(): ReleaseTokenAsUsdCall__Outputs {
    return new ReleaseTokenAsUsdCall__Outputs(this);
  }
}

export class ReleaseTokenAsUsdCall__Inputs {
  _call: ReleaseTokenAsUsdCall;

  constructor(call: ReleaseTokenAsUsdCall) {
    this._call = call;
  }

  get orderId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get oracleAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ReleaseTokenAsUsdCall__Outputs {
  _call: ReleaseTokenAsUsdCall;

  constructor(call: ReleaseTokenAsUsdCall) {
    this._call = call;
  }
}
